Handlebars = require 'handlebars'
component  = require 'application/components/loader'
moment     = require 'moment'

module.exports = ->

  helpers =

    mainTitle: (text, showTitle) ->
      text = helpers.episodeTitle(text, showTitle)
      new Handlebars.SafeString("<h1 class=\"main-title\">#{text}</h1>")

    secondaryTitle: (text) ->
      new Handlebars.SafeString("<h2 class=\"secondary-title\">#{text}</h2>")

    url: (controller, action, id) ->
      url = [
        controller
        action
      ]
      if typeof id isnt 'object' then url.push(id)
      return new Handlebars.SafeString("/" + url.join('/'))

    alternate: (num) ->
      if (num % 2 == 0) then 'even' else 'odd'

    logobox: component('logobox')

    episodeTitle: (text, showTitle) ->
      #strip off spaces and "nutv -" from the start
      text = text.replace(/^(?:\s)*(?:nutv)?(?:\s)*(?:-)*(?:\s)*/i, '')
      if showTitle?
        regexStr = '(?:\s)*(?:-)*(?:\s)*' + showTitle + '(?:\s)*(?:-)*(?:\s)*'
        regex = new RegExp('(?:\s)*(?:-)*(?:\s)*' + showTitle + '(?:\s)*(?:-)*(?:\s)*', 'i')
        text = text.replace(regex, '')

    episodeDescriptionSnippet: (text) ->
      snippet = text.match(/((?:\w+[,!@#%&:;]?\s){0,15})/i)?[1]
      if !!snippet then snippet = snippet + '...'

    episodeDate: (dateText) ->
      moment(dateText).format('MMMM Do YYYY')

    showDescription: (text) ->
      if not text then text = 'Please fill in a description for this show on youtube'
      text

    showDescriptionShort: (text) ->
      if not text then text = 'Please fill in a description for this show on youtube'
      text

  return helpers
