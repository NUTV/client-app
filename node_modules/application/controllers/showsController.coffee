Show      = require 'application/models/show'
Episode   = require 'application/models/episode'
moment    = require 'moment'
component = require 'application/components/loader'

controller = {}

# All shows
controller.shows = (req, res) ->
  await Show.findAll(defer(shows))

  data =
    shows: shows

  res.render('index', data)
  return

# A single show page
controller.show = (req, res) ->

  await Show.findByName req.params.name, defer(show)
  await Episode.findAllByShowId show.id , defer(episodes)

  helpers =
    episodeTitle: (text) ->
      text.match(/^.*(episode\s\d).*$/i)[1]
    episodeDescriptionSnippet: (text) ->
      text.match(/((?:\w+[,!@#%&:;]?\s){0,15})/i)[1] + '...'
    episodeDate: (dateText) ->
      moment(dateText).format('MMMM Do YYYY')

  data =
    show: show
    episodes: episodes
    latestEpisode: episodes[0]
    helpers: helpers

  res.render('show', data)
  return


# An episode for a show
controller.episode = (req, res) ->

  await Show.findByName req.params.name, defer(show)
  await Episode.findAllByShowId show.id , defer(episodes)
  await Episode.findByShowIdAndEpisodeNumber(show.id, req.params.number, defer(episode))

  helpers =
    episodeTitle: (text) ->
      text.match(/^.*(episode\s\d).*$/i)[1]
    episodeDescriptionSnippet: (text) ->
      text.match(/((?:\w+[,!@#%&:;]?\s){0,15})/i)[1] + '...'
    episodeDate: (dateText) ->
      moment(dateText).format('MMMM Do YYYY')

  data =
    show: show
    episode: episode
    episodes: episodes
    helpers: helpers

  res.render('episode', data)

#export controller
module.exports = controller
